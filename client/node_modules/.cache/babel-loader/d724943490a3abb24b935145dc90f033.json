{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionStart = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLUECTION_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLUECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLUECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["/Users/maksimkazimirski/Documents/react-playground/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","collectionMap","type","FETCH_COLUECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLUECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLUECTION_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,oBAAoB,GAAIC,aAAD,KAAoB;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,CAApB,CAA7B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEL,eAAe,CAACS,wBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEL,eAAe,CAACa,wBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAa,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMhB,aAAa,GAAGF,+BAA+B,CAACkB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACH,aAAD,CAAxB,CAAR;AACD,KALH,EAMGiB,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,uBAAuB,CAACW,KAAD,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionStart = (collectionMap) => ({\n  type: ShopActionTypes.FETCH_COLUECTION_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLUECTION_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLUECTION_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}